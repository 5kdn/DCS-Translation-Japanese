name: Release on Merge or Commit to master

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate tag name from date
        id: commit
        run: |
          echo "tag_name=$(date +v%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

      - name: Create ZIP files
        run: |
          # aircraft
          target_dir="DCSWorld/Mods/aircraft"
          output_dir="zips/aircraft"

          mkdir -p "$output_dir"

          target_dir = "DCSWorld/Mods/aircraft"

          for dir in "$target_dir"/*/ ; do
            [ -d "$dir" ] || continue
            aircraft_model=$(basename "$dir")

            for tgt in Campaigns Missions QuickStart Single; do
              missions_dir="$dir/$tgt"

              # Missions 以下の子ディレクトリを個別に zip 圧縮
              if [ -d "$missions_dir" ]; then
                for mission_subdir in "$missions_dir"/*/ ; do
                  [ -d "$mission_subdir" ] || continue
                  mission_name=$(basename "$mission_subdir")
                  zip -r "$missions_dir/$mission_name.zip" "$mission_subdir"
                done
              fi
            done

            # aircraft ディレクトリ全体を zip 圧縮して出力先に保存
            zip -r "$output_dir/${aircraft_model}.zip" "$dir"
          done
        # mkdir -p zips

          # for base in DCSWorld/Mods/aircraft DCSWorld/Mods/campaigns DCSWorld/Mods/tech; do
          #   if [ -d "$base" ]; then
          #     category=$(basename "$base")

          #     subdirs=$(find "$base" -mindepth 1 -maxdepth 1 -type d)
          #     if [ -n "$subdirs" ]; then
          #       for dir in $subdirs; do
          #         modname=$(basename "$dir")
          #         zipname="${category}-${modname}.zip"

          #         (
          #           cd "$(dirname "$dir")"
          #           zip -r "$OLDPWD/zips/${zipname}" "$(basename "$dir")" \
          #             -x '*.DS_Store' \
          #             -x '*.gitkeep' \
          #             -x '*/Thumbs.db' \
          #             -x '*/desktop.ini'
          #         )
          #       done
          #     fi
          #   fi
          # done

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag=${{ steps.commit.outputs.tag_name }}
          gh release create "$tag" --title "Auto Release $tag"

      - name: Upload ZIPs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag=${{ steps.commit.outputs.tag_name }}
          find zips extras -type f -print0 | while IFS= read -r -d '' file; do
            echo "Uploading: $file"
            gh release upload "$tag" "$file" --clobber
          done
