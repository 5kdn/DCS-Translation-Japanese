name: Release on Merge or Commit to master

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate tag name from date
        id: commit
        run: |
          echo "tag_name=$(date +v%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

      - name: Create ZIP files
        run: |
          mkdir -p zips

          for base in DCSWorld/Mods/aircraft DCSWorld/Mods/tech; do
            if [ -d "$base" ]; then
              category=$(basename "$base")

              subdirs=$(find "$base" -mindepth 1 -maxdepth 1 -type d)
              if [ -n "$subdirs" ]; then
                for dir in $subdirs; do
                  modname=$(basename "$dir")
                  zipname="${category}-${modname}.zip"

                  (
                    cd "$(dirname "$dir")"
                    zip -r "$OLDPWD/zips/${zipname}" "$(basename "$dir")" \
                      -x '*.DS_Store' \
                      -x '*.gitkeep' \
                      -x '*/Thumbs.db' \
                      -x '*/desktop.ini'
                  )
                done
              fi
            fi
          done

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag=${{ steps.commit.outputs.tag_name }}

          # 前のタグを取得（なければ空文字になる）
          prev_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          # コミットログを取得
          if [ -n "$prev_tag" ]; then
            changelog=$(git log "$prev_tag"..HEAD --pretty=format:"- %s")
          else
            changelog=$(git log --pretty=format:"- %s")
          fi

          gh release create "$tag" \
            --title "Auto Release $tag" \
            --notes changelog \

      - name: Upload ZIPs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag=${{ steps.commit.outputs.tag_name }}
          find zips extras -type f -print0 | while IFS= read -r -d '' file; do
            echo "Uploading: $file"
            gh release upload "$tag" "$file" --clobber
          done